{"version":3,"sources":["redux/contacts/contactsActions.js","services/contactsAPI.js","redux/contacts/contactsOperations.js","redux/contacts/contactsReducer.js","redux/store.js","redux/contacts/contactsSelectors.js","components/contactForm/ContactForm.js","components/contactList/ContactList.js","components/filter/Filter.js","App.js","index.js"],"names":["filterContact","createAction","a","axios","get","data","contact","post","contactId","delete","defaults","baseURL","fetchContacts","fetchAddContacts","fetchDeleteContacts","createAsyncThunk","type","rejectWithValue","contactsApi","contacts","items","createReducer","fulfilled","state","payload","filter","id","actionContacts","combineReducers","store","configureStore","reducer","contactsReducer","getContactsItems","getContactsFilter","getVisibleContacts","createSelector","allContacts","normalizedFilter","toLowerCase","name","includes","ContactForm","handleAddContact","useState","setName","number","setNumber","useSelector","selectors","dispatch","useDispatch","useEffect","contactsOperations","handleChangeForm","target","value","resetForm","onSubmit","e","preventDefault","uuidv4","forEach","alert","pattern","title","required","onChange","ContactList","visibleContacts","length","map","onClick","operations","Filter","filterValue","actions","placeholder","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04a81141.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\n\nexport const filterContact = createAction(\"contacts/filter\");\n\nexport default {\n  filterContact,\n};\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"http://localhost:3004\";\n\nasync function fetchContacts() {\n  const { data } = await axios.get(\"/contacts\");\n  return data;\n}\n\nasync function fetchAddContacts(contact) {\n  const { data } = await axios.post(\"/contacts\", contact);\n  return data;\n}\n\nasync function fetchDeleteContacts(contactId) {\n  const { data } = await axios.delete(`/contacts/${contactId}`);\n  return data;\n}\n\nexport default { fetchContacts, fetchAddContacts, fetchDeleteContacts };\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport contactsApi from \"../../services/contactsAPI\";\n\nexport const fetchContacts = createAsyncThunk(\n  \"сontacts/fetchContactsRequest\",\n  async (type, { rejectWithValue }) => {\n    try {\n      const contacts = await contactsApi.fetchContacts();\n      return contacts;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const fetchAddContacts = createAsyncThunk(\n  \"сontacts/fetchAddContactsRequest\",\n  async (contact, { rejectWithValue }) => {\n    try {\n      await contactsApi.fetchAddContacts(contact);\n      return contact;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport const fetchDeleteContacts = createAsyncThunk(\n  \"сontacts/fetchDeleteContactsRequest\",\n  async (contactId, { rejectWithValue }) => {\n    try {\n      await contactsApi.fetchDeleteContacts(contactId);\n      return contactId;\n    } catch (error) {\n      return rejectWithValue(error);\n    }\n  }\n);\n\nexport default {\n  fetchContacts,\n  fetchAddContacts,\n  fetchDeleteContacts,\n};\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport actionContacts from \"./contactsActions\";\nimport {\n  fetchContacts,\n  fetchAddContacts,\n  fetchDeleteContacts,\n} from \"./contactsOperations\";\n\nconst items = createReducer([], {\n  [fetchContacts.fulfilled]: (state, { payload }) => payload,\n  [fetchAddContacts.fulfilled]: (state, { payload }) => [payload, ...state],\n  [fetchDeleteContacts.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer(\"\", {\n  [actionContacts.filterContact]: (state, { payload }) => payload,\n});\n\nexport default combineReducers({ items, filter });\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport contactsReducer from \"./contacts/contactsReducer\";\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n  },\n});\n\nexport default store;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getContactsItems = (state) => state.contacts.items;\nconst getContactsFilter = (state) => state.contacts.filter;\n\nconst getVisibleContacts = createSelector(\n  [getContactsItems, getContactsFilter],\n  (allContacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    const getAllContacts = allContacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n\n    return getAllContacts;\n  }\n);\n\nexport default {\n  getContactsItems,\n  getContactsFilter,\n  getVisibleContacts,\n};\n","import { useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport selectors from \"../../redux/contacts/contactsSelectors\";\nimport contactsOperations from \"../../redux/contacts/contactsOperations\";\n\nexport default function ContactForm(handleAddContact) {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const contacts = useSelector(selectors.getContactsItems);\n\n  const dispatch = useDispatch();\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n  const handleChangeForm = ({ target }) => {\n    const { name, value } = target;\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"number\":\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const checkContacts = () => {\n    contacts.forEach((contact) => {\n      if (contact.name === name || contact.number === number) {\n        alert(`${name} already exists. Try another name`);\n      }\n      return;\n    });\n  };\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n    dispatch(\n      contactsOperations.fetchAddContacts({ id: uuidv4(), name, number })\n    );\n    checkContacts();\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  return (\n    <form onSubmit={handleFormSubmit}>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"name Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan.\"\n        required\n        value={name}\n        onChange={handleChangeForm}\n      />\n\n      <input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"The telephone number must contain numbers and may contain spaces, dashes, parentheses and may start with +\"\n        required\n        value={number}\n        onChange={handleChangeForm}\n      />\n\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n","import { useSelector, useDispatch } from \"react-redux\";\nimport selectors from \"../../redux/contacts/contactsSelectors\";\nimport operations from \"../../redux/contacts/contactsOperations\";\n\nconst ContactList = () => {\n  const visibleContacts = useSelector(selectors.getVisibleContacts);\n\n  const dispatch = useDispatch();\n  if (visibleContacts.length === 0) return null;\n  return (\n    <ul>\n      {visibleContacts.map((contact) => (\n        <li key={contact.id}>\n          {contact.name}: {contact.number}\n          <button\n            onClick={(id) =>\n              dispatch(operations.fetchDeleteContacts(contact.id))\n            }\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport selectors from \"../../redux/contacts/contactsSelectors\";\nimport actions from \"../../redux/contacts/contactsActions\";\n\nconst Filter = () => {\n  const filterValue = useSelector(selectors.getContactsFilter);\n  const dispatch = useDispatch(actions.filterContact);\n  return (\n    <input\n      type=\"text\"\n      onChange={(e) => dispatch(actions.filterContact(e.target.value))}\n      value={filterValue}\n      placeholder=\"Enter name \"\n    />\n  );\n};\n\nexport default Filter;\n","import \"./App.css\";\nimport ContactForm from \"./components/contactForm/ContactForm\";\nimport ContactList from \"./components/contactList/ContactList\";\nimport Filter from \"./components/filter/Filter\";\n\nexport default function App() {\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Filter</h2>\n      <Filter />\n      <ContactList />\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}